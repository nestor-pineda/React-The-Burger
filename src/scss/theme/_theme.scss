@import "../abstracts/variables";

$textColorLight: $myColor1;
$textColorDark: $myColor2;
$bgColorLight: $myColor2;
$bgColorDark: $myColor10;
$bgColorFooterLight: $myColor6;
$bgColorFooterDark: $myColor7;

$themes: (
  light: (
    bg: $bgColorLight,
    text: $textColorLight,
    footerBg: $bgColorFooterLight,
    dashboarBg: $dashboarGbLight,
    border: $borderColor,
    brownBG: $footerBg,
    greenBG: $titleBg,
    blueBG: $titleBg2,
    purpleBG: $menuCardPrice3,
    logo: brightness(0),
    icon: invert(0),
  ),
  dark: (
    bg: $bgColorDark,
    text: $textColorDark,
    footerBg: $bgColorFooterDark,
    dashboarBg: $dashboarGbDark,
    border: $borderColorDark,
    brownBG: $footerBgDark,
    greenBG: $titleBgDark,
    blueBG: $titleBg2Dark,
    purpleBG: $menuCardPrice3Dark,
    logo: brightness(100),
    icon: invert(1),
  ),
);

@mixin themed() {
  @each $theme, $map in $themes {
    .theme--#{$theme} & {
      $theme-map: () !global;
      @each $key, $submap in $map {
        $value: map-get(map-get($themes, $theme), "#{$key}");
        $theme-map: map-merge(
          $theme-map,
          (
            $key: $value,
          )
        ) !global;
      }
      @content;
      $theme-map: null !global;
    }
  }
}

@function t($key) {
  @return map-get($theme-map, $key);
}
